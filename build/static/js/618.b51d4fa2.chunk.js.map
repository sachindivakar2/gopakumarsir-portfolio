{"version":3,"file":"static/js/618.b51d4fa2.chunk.js","mappings":"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","sources":["components/navbars/Menu-contacts.tsx","components/navbars/Navbar-contact.tsx","hooks/auth/useUser.ts","components/BackToTop.tsx","components/footer/Footer2.tsx","pages/other/Contact/Hero.tsx","components/form/FormInput.tsx","pages/other/Contact/ContactUs.tsx","pages/other/Contact/index.tsx"],"sourcesContent":["import { Nav, Dropdown, Row, Col } from 'react-bootstrap';\r\nimport { NavLink, Link, useLocation } from 'react-router-dom';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport classNames from 'classnames';\r\n\r\ntype MenuProps = {\r\n    showDownload?: boolean;\r\n    navClass?: string;\r\n    buttonClass?: string;\r\n    loggedInUser?: {};\r\n};\r\n\r\nconst Menu = ({ navClass, buttonClass, showDownload, loggedInUser }: MenuProps) => {\r\n    let location = useLocation();\r\n\r\n    const isActiveRoute = (path: string) => {\r\n        if (location.pathname) {\r\n            return location.pathname.includes(path);\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <Nav as=\"ul\" className={classNames('align-items-lg-center', navClass)}>\r\n            <Nav.Item as=\"li\">\r\n                <NavLink to=\"/home\" end className={classNames('nav-link', ({ ...isActive }) => isActive && 'active')}>\r\n                    Home\r\n                </NavLink>\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import { useEffect } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// hooks\r\nimport { useUser } from '../../hooks/auth';\r\n\r\n// components\r\nimport Menu from './Menu-contacts';\r\n\r\n// images\r\nimport logo from '../../assets/images/image.png';\r\nimport logoLight from '../../assets/images/logo-light.png';\r\n\r\ntype Navbar1Props = {\r\n    isSticky?: boolean;\r\n    navClass?: string;\r\n    buttonClass?: string;\r\n    fixedWidth?: boolean;\r\n    hideSearch?: boolean;\r\n};\r\n\r\nconst Navbar1 = ({ isSticky, navClass, buttonClass, fixedWidth, hideSearch }: Navbar1Props) => {\r\n    const [loggedInUser] = useUser();\r\n\r\n    // on scroll add navbar class\r\n    useEffect(() => {\r\n        const btnTop = document.getElementById('btn-back-to-top');\r\n        const navbar = document.getElementById('sticky');\r\n        window.addEventListener('scroll', (e) => {\r\n            e.preventDefault();\r\n            if (btnTop) {\r\n                if (document.body.scrollTop >= 50 || document.documentElement.scrollTop >= 50) {\r\n                    btnTop.classList.add('show');\r\n                } else {\r\n                    btnTop.classList.remove('show');\r\n                }\r\n            }\r\n            if (navbar) {\r\n                if (document.body.scrollTop >= 240 || document.documentElement.scrollTop >= 240) {\r\n                    navbar.classList.add('navbar-sticky');\r\n                } else {\r\n                    navbar.classList.remove('navbar-sticky');\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <header>\r\n            <Navbar\r\n                id={isSticky ? 'sticky' : ''}\r\n                collapseOnSelect\r\n                expand=\"lg\"\r\n                className={classNames('topnav-menu', navClass)}\r\n            >\r\n                <Container fluid={!fixedWidth}>\r\n                    <Navbar.Brand href=\"/\" className=\"logo\">\r\n                        <img src={logo} height=\"100\" className=\"align-top logo-dark\" alt=\"\" style={{margin: '16px !important'}}  />\r\n                        <img src={logoLight} height=\"30\" className=\"align-top logo-light\" alt=\"\" />\r\n                    </Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"topnav-menu-content\">\r\n                        {!hideSearch && (\r\n                            <Nav className=\"align-items-lg-center d-flex me-auto\">\r\n                                <Nav.Item as=\"li\">\r\n                                    <form id=\"search\" className=\"form-inline d-none d-sm-flex\">\r\n                                        <div className=\"form-control-with-hint ms-lg-2 ms-xl-4\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                id=\"search-input\"\r\n                                                placeholder=\"What are you looking for?\"\r\n                                            />\r\n                                            <span className=\"form-control-feedback uil uil-search fs-16\"></span>\r\n                                        </div>\r\n                                    </form>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        )}\r\n                        <Menu\r\n                            showDownload\r\n                            loggedInUser={loggedInUser}\r\n                            navClass=\"ms-auto\"\r\n                            buttonClass={buttonClass ? buttonClass : 'btn-primary'}\r\n                        />\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Navbar1;\r\n","import { APICore } from '../../helpers/api/apiCore';\r\n\r\nexport default function useUser() {\r\n    const api = new APICore();\r\n\r\n    const loggedInUser = api.getLoggedInUser();\r\n    return [loggedInUser];\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport classNames from 'classnames';\r\n\r\ntype BackToTopProps = {\r\n    variant: string;\r\n};\r\n\r\nconst BackToTop = ({ variant }: BackToTopProps) => {\r\n    return (\r\n        <Link\r\n            className={classNames('btn', 'btn-soft-' + variant, 'shadow-none', 'btn-icon', 'btn-back-to-top')}\r\n            id=\"btn-back-to-top\"\r\n            to=\"#\"\r\n            onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\r\n        >\r\n            <FeatherIcon icon=\"arrow-up\" className=\"icon-xxs\" />\r\n        </Link>\r\n    );\r\n};\r\n\r\nBackToTop.defaultProps = {\r\n    variant: 'primary',\r\n};\r\n\r\nexport default BackToTop;\r\n","import { Link } from 'react-router-dom';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport FeatherIcon from 'feather-icons-react';\r\n\r\n// imgaes\r\nimport logo from 'assets/images/image.png';\r\n\r\nconst Footer2 = () => {\r\n    return (\r\n        <section className=\"mt-lg-5 pt-5 pb-4 bg-gradient3 position-relative\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xl={8}>\r\n                        <Link className=\"navbar-brand me-lg-4 mb-4 me-auto d-flex align-items-center pt-0\" to=\"#\">\r\n                            <img src={logo} height=\"30\" alt=\"\" />\r\n                        </Link>\r\n                        <p className=\"text-muted w-50\">\r\n                            On the other hand, we denounce with righteous indignation and dislike men who are so\r\n                            beguiled and demoralized.\r\n                        </p>\r\n                    </Col>\r\n                    <Col xl=\"auto\" sm={4} xs={6}>\r\n                        <div className=\"ps-xl-5\">\r\n                            <h6 className=\"mb-3 mt-3 mt-sm-2 fs-14 fw-semibold text-uppercase\">Resources</h6>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li className=\"my-3\">\r\n                                    <Link to=\"#\" className=\"text-muted\">\r\n                                        Blog\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"my-3\">\r\n                                    <Link to=\"#\" className=\"text-muted\">\r\n                                        FAQ\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"my-3\">\r\n                                    <Link to=\"#\" className=\"text-muted\">\r\n                                        Team of service\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"my-3\">\r\n                                    <Link to=\"#\" className=\"text-muted\">\r\n                                        Privacy policy\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xl=\"auto\" sm={4} xs={6}>\r\n                        <div className=\"ps-xl-5\">\r\n                            <h6 className=\"mb-3 mt-3 mt-sm-2 fs-14 fw-semibold text-uppercase\">Company</h6>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li className=\"my-3\">\r\n                                    <Link to=\"#\" className=\"text-muted\">\r\n                                        About Us\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"my-3\">\r\n                                    <Link to=\"#\" className=\"text-muted\">\r\n                                        Contact Us\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row className=\"text-md-start text-center\">\r\n                    <Col md={8}>\r\n                        <p className=\"pb-0 mb-0 text-muted\">\r\n                            {new Date().getFullYear()} © Prompt. All rights reserved. Crafted by{' '}\r\n                            <a href=\"https://coderthemes.com/\">Coderthemes</a>\r\n                        </p>\r\n                    </Col>\r\n                    <Col md={4} className=\"text-md-end\">\r\n                        <div className=\"align-items-end mt-md-0 mt-4\">\r\n                            <ul className=\"list-unstyled mb-0\">\r\n                                <li className=\"d-inline-block me-4\">\r\n                                    <Link to=\"#\">\r\n                                        <FeatherIcon icon=\"facebook\" className=\"icon icon-xs\" />\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"d-inline-block me-4\">\r\n                                    <Link to=\"#\">\r\n                                        <FeatherIcon icon=\"twitter\" className=\"icon icon-xs\" />\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"d-inline-block\">\r\n                                    <Link to=\"#\">\r\n                                        <FeatherIcon icon=\"linkedin\" className=\"icon icon-xs\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Footer2;\r\n","import { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Hero = () => {\r\n    return (\r\n        <section className=\"hero-4 pt-lg-6 pb-sm-9 pb-6 pt-9\">\r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col lg={7} className=\"text-center\">\r\n                        <h1 className=\"hero-title mb-0\">Contact Us</h1>\r\n                        <p className=\"mb-4 fs-17 text-muted\">\r\n                            Please fill out the following form and we will get back to you shortly\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <div className=\"shape bottom\">\r\n                <svg\r\n                    width=\"1440px\"\r\n                    height=\"40px\"\r\n                    viewBox=\"0 0 1440 40\"\r\n                    version=\"1.1\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <g id=\"shape-b\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                        <g id=\"curve\" fill=\"#fff\">\r\n                            <path\r\n                                d=\"M0,30.013 C239.659,10.004 479.143,0 718.453,0 C957.763,0 1198.28,10.004 1440,30.013 L1440,40 L0,40 L0,30.013 Z\"\r\n                                id=\"Path\"\r\n                            ></path>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Hero;\r\n","import React, { InputHTMLAttributes } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\n\r\nimport { FieldErrors, Control } from 'react-hook-form';\r\n\r\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    startIcon?: React.ReactNode;\r\n    label?: string;\r\n    type?: string;\r\n    name: string;\r\n    comp?: string;\r\n    placeholder?: string;\r\n    register?: any;\r\n    errors?: FieldErrors;\r\n    control?: Control<any>;\r\n    className?: string;\r\n    labelClassName?: string;\r\n    containerClass?: string;\r\n    textClassName?: string;\r\n    refCallback?: any;\r\n    action?: React.ReactNode;\r\n    rows?: string | number;\r\n}\r\n\r\n// textual form-controls—like inputs, passwords, textareas etc.\r\nconst TextualInput = ({\r\n    type,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    comp,\r\n    rows,\r\n    className,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <>\r\n            <Form.Control\r\n                type={type}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                as={comp}\r\n                id={name}\r\n                ref={(r: HTMLInputElement) => {\r\n                    if (refCallback) refCallback(r);\r\n                }}\r\n                className={className}\r\n                isInvalid={errors && errors[name] ? true : false}\r\n                {...(register ? register(name) : {})}\r\n                rows={rows}\r\n                {...otherProps}\r\n            ></Form.Control>\r\n\r\n            {errors && errors[name] && (\r\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\r\n                    {errors[name]['message']}\r\n                </Form.Control.Feedback>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// non-textual checkbox and radio controls\r\nconst CheckInput = ({\r\n    type,\r\n    label,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    comp,\r\n    rows,\r\n    className,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <>\r\n            <Form.Check\r\n                type={type}\r\n                label={label}\r\n                name={name}\r\n                id={name}\r\n                ref={(r: HTMLInputElement) => {\r\n                    if (refCallback) refCallback(r);\r\n                }}\r\n                className={className}\r\n                isInvalid={errors && errors[name] ? true : false}\r\n                {...(register ? register(name) : {})}\r\n                {...otherProps}\r\n            />\r\n\r\n            {errors && errors[name] && (\r\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// handle select controls\r\nconst SelectInput = ({\r\n    type,\r\n    label,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    comp,\r\n    rows,\r\n    className,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <>\r\n            <Form.Select\r\n                type={type}\r\n                label={label}\r\n                name={name}\r\n                id={name}\r\n                ref={(r: HTMLInputElement) => {\r\n                    if (refCallback) refCallback(r);\r\n                }}\r\n                className={className}\r\n                isInvalid={errors && errors[name] ? true : false}\r\n                {...(register ? register(name) : {})}\r\n                {...otherProps}\r\n            />\r\n\r\n            {errors && errors[name] && (\r\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// extend textual form-controls with add-ons\r\nconst FormInputGroup = ({\r\n    startIcon,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    comp,\r\n    register,\r\n    errors,\r\n    rows,\r\n    className,\r\n    textClassName,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <InputGroup>\r\n            <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\r\n            {type === 'select' ? (\r\n                <SelectInput\r\n                    type={type}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    refCallback={refCallback}\r\n                    comp={comp}\r\n                    errors={errors}\r\n                    register={register}\r\n                    className={className}\r\n                    rows={rows}\r\n                    {...otherProps}\r\n                />\r\n            ) : (\r\n                <TextualInput\r\n                    type={type}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    refCallback={refCallback}\r\n                    comp={comp}\r\n                    errors={errors}\r\n                    register={register}\r\n                    className={className}\r\n                    rows={rows}\r\n                    {...otherProps}\r\n                />\r\n            )}\r\n        </InputGroup>\r\n    );\r\n};\r\n\r\nconst FormInput = ({\r\n    startIcon,\r\n    label,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    control,\r\n    className,\r\n    labelClassName,\r\n    containerClass,\r\n    textClassName,\r\n    refCallback,\r\n    action,\r\n    rows,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    // handle input type\r\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\r\n\r\n    return (\r\n        <>\r\n            {type === 'hidden' ? (\r\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\r\n            ) : (\r\n                <>\r\n                    {type === 'checkbox' || type === 'radio' ? (\r\n                        <Form.Group className={containerClass}>\r\n                            <CheckInput\r\n                                type={type}\r\n                                label={label}\r\n                                name={name}\r\n                                placeholder={placeholder}\r\n                                refCallback={refCallback}\r\n                                errors={errors}\r\n                                register={register}\r\n                                comp={comp}\r\n                                className={className}\r\n                                rows={rows}\r\n                                {...otherProps}\r\n                            />\r\n                        </Form.Group>\r\n                    ) : type === 'select' ? (\r\n                        <Form.Group className={containerClass}>\r\n                            {label && (\r\n                                <>\r\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\r\n                                    {action && action}\r\n                                </>\r\n                            )}\r\n                            {startIcon ? (\r\n                                <FormInputGroup\r\n                                    type={type}\r\n                                    startIcon={startIcon}\r\n                                    name={name}\r\n                                    comp={comp}\r\n                                    textClassName={textClassName}\r\n                                    placeholder={placeholder}\r\n                                    refCallback={refCallback}\r\n                                    errors={errors}\r\n                                    register={register}\r\n                                    className={className}\r\n                                    rows={rows}\r\n                                    {...otherProps}\r\n                                />\r\n                            ) : (\r\n                                <SelectInput\r\n                                    type={type}\r\n                                    name={name}\r\n                                    placeholder={placeholder}\r\n                                    refCallback={refCallback}\r\n                                    errors={errors}\r\n                                    register={register}\r\n                                    comp={comp}\r\n                                    className={className}\r\n                                    rows={rows}\r\n                                    {...otherProps}\r\n                                />\r\n                            )}\r\n                        </Form.Group>\r\n                    ) : (\r\n                        <Form.Group className={containerClass}>\r\n                            {label && (\r\n                                <>\r\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\r\n                                    {action && action}\r\n                                </>\r\n                            )}\r\n                            {startIcon ? (\r\n                                <FormInputGroup\r\n                                    type={type}\r\n                                    startIcon={startIcon}\r\n                                    name={name}\r\n                                    comp={comp}\r\n                                    textClassName={textClassName}\r\n                                    placeholder={placeholder}\r\n                                    refCallback={refCallback}\r\n                                    errors={errors}\r\n                                    register={register}\r\n                                    className={className}\r\n                                    rows={rows}\r\n                                    {...otherProps}\r\n                                />\r\n                            ) : (\r\n                                <TextualInput\r\n                                    type={type}\r\n                                    name={name}\r\n                                    placeholder={placeholder}\r\n                                    refCallback={refCallback}\r\n                                    errors={errors}\r\n                                    register={register}\r\n                                    comp={comp}\r\n                                    className={className}\r\n                                    rows={rows}\r\n                                    {...otherProps}\r\n                                />\r\n                            )}\r\n                        </Form.Group>\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n","import { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport FeatherIcon from 'feather-icons-react';\r\n\r\n// components\r\nimport { FormInput } from 'components/form';\r\n\r\nconst ContactUs = () => {\r\n    // form validation schema\r\n    const schemaResolver = yupResolver(\r\n        yup.object().shape({\r\n            fname: yup.string().required('Please enter first name'),\r\n            lname: yup.string().required('Please enter last name'),\r\n            email: yup.string().required('Please enter Email').email('Please enter valid Email'),\r\n            message: yup.string().required('Please enter Message'),\r\n        })\r\n    );\r\n\r\n    // form method\r\n    const methods = useForm({ resolver: schemaResolver });\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        control,\r\n        formState: { errors },\r\n    } = methods;\r\n\r\n    // handle form submission\r\n    const onSubmit = () => { };\r\n\r\n    return (\r\n        <section className=\"section pb-lg-7 py-4 position-relative\">\r\n            <Container>\r\n                <Row className=\"align-items-center\">\r\n                    <Col lg={6}>\r\n                        <Card className=\"shadow-none\">\r\n                            <Card.Body className=\"p-xl-5 p-0\">\r\n                                <h2 className=\"mb-2 mt-0 fw-medium\">Let's Talk Further</h2>\r\n                                <p className=\"mb-5\">\r\n                                    Please fill out the following form and we will get back to you shortly\r\n                                </p>\r\n\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"fname\"\r\n                                                label=\"First Name\"\r\n                                                placeholder=\"Your First Name\"\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"lname\"\r\n                                                label=\"Last Name\"\r\n                                                placeholder=\"Your Last Name\"\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col lg={12}>\r\n                                            <FormInput\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                label=\"Email Name\"\r\n                                                placeholder=\"Your Email\"\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col lg={12}>\r\n                                            <FormInput\r\n                                                type=\"textarea\"\r\n                                                name=\"message\"\r\n                                                label=\"Message\"\r\n                                                placeholder=\"Type Your message...\"\r\n                                                rows={5}\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col lg=\"auto\" className=\"mb-0\">\r\n                                            <Button type=\"submit\">\r\n                                                Send\r\n                                                <span className=\"icon icon-xs text-white ms-1\">\r\n                                                    <FeatherIcon icon=\"send\" />\r\n                                                </span>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col lg={{ offset: 1, span: 5 }}>\r\n                        <div style={{ height: '520px' }}>\r\n                            <GoogleMapReact defaultZoom={12} defaultCenter={{ lat: 8.5485, lng: 76.9431 }} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5 align-items-center\">\r\n                    <Col md={4}>\r\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\r\n                            <span className=\"bg-soft-primary avatar avatar-sm rounded icon icon-with-bg icon-xs text-primary me-3 flex-shrink-0\">\r\n                                <FeatherIcon icon=\"mail\" className=\"icon-dual-primary\" />\r\n                            </span>\r\n                            <div className=\"flex-grow-1\">\r\n                                <h5 className=\"m-0 fw-medium\">Email</h5>\r\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\r\n                                    gopu4848@gmail.com\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\r\n                            <span className=\"bg-soft-orange avatar avatar-sm rounded icon icon-with-bg icon-xs text-orange me-3 flex-shrink-0\">\r\n                                <FeatherIcon icon=\"phone-call\" className=\"icon-dual-orange\" />\r\n                            </span>\r\n                            <div className=\"flex-grow-1\">\r\n                                <h5 className=\"m-0 fw-medium\">Phone</h5>\r\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\r\n                                    +91-9446656565\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <div className=\"d-flex px-md-1 px-lg-5 mb-md-0 mb-3\">\r\n                            <span className=\"bg-soft-info avatar avatar-sm rounded icon icon-with-bg icon-xs text-info me-3 flex-shrink-0\">\r\n                                <FeatherIcon icon=\"map-pin\" className=\"icon-dual-info\" />\r\n                            </span>\r\n                            <div className=\"flex-grow-1\">\r\n                                <h5 className=\"m-0 fw-medium\">Address</h5>\r\n                                <Link to=\"#\" className=\"text-muted fw-normal h5 my-1\">\r\n                                    Sreekariyam\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ContactUs;\r\n","// components\r\nimport { NavbarContacts } from 'components/navbars';\r\nimport BackToTop from 'components/BackToTop';\r\nimport { Footer2 } from 'components/footer';\r\n\r\nimport Hero from './Hero';\r\nimport ContactUs from './ContactUs';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <>\r\n            <div className=\"header-7 bg-gradient2\">\r\n                <NavbarContacts\r\n                    hideSearch\r\n                    fixedWidth\r\n                    navClass=\"navbar-light zindex-10\"\r\n                    buttonClass=\"btn-outline-secondary btn-sm\"\r\n                />\r\n\r\n                <Hero />\r\n            </div>\r\n\r\n            {/* contact us */}\r\n            <ContactUs />\r\n\r\n            {/* footer */}\r\n            <Footer2 />\r\n\r\n            <BackToTop />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["navClass","buttonClass","showDownload","loggedInUser","useLocation","as","className","classNames","to","end","isSticky","fixedWidth","hideSearch","APICore","getLoggedInUser","useEffect","btnTop","document","getElementById","navbar","window","addEventListener","e","preventDefault","body","scrollTop","documentElement","classList","add","remove","id","collapseOnSelect","expand","fluid","href","src","logo","height","alt","style","margin","logoLight","type","placeholder","BackToTop","variant","onClick","scrollTo","top","behavior","icon","defaultProps","xl","sm","xs","md","Date","getFullYear","lg","width","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","d","TextualInput","name","register","errors","comp","rows","refCallback","otherProps","Form","ref","r","isInvalid","CheckInput","label","SelectInput","FormInputGroup","startIcon","textClassName","InputGroup","control","labelClassName","containerClass","action","schemaResolver","yupResolver","yup","shape","fname","required","lname","email","message","methods","useForm","resolver","handleSubmit","formState","Card","onSubmit","Button","offset","span","defaultZoom","defaultCenter","lat","lng"],"sourceRoot":""}